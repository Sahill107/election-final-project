y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_covid_deaths) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
View(election)
View(election)
View(unemployment)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county,
`Unemployment Rate` = unemployment_rate) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
skewness(master_data)
skewness(county_health$traffic_volume)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
skewness(master$population)
skewness(master_data$population)
skewness(master_data$covid_deaths)
skewness(master_data$total_deaths)
View(poverty_raw)
View(poverty_raw)
skewness((poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value))$POVALL_2019)
nums <- unlist(lapply(master_data, is.numeric))
nums
master_data %>% dplyr::select(where(is.numeric))
skewness(master_data %>% dplyr::select(where(is.numeric)))
skew_check = skewness(master_data %>% dplyr::select(where(is.numeric)))
View(skew_check)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(
region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_covid_deaths
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
# read in the cleaned data
master_data = read_csv("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/master_data.csv")
library(tidyverse)
# read in the cleaned data
master_data = read_csv("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/master_data.csv")
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/3-train-test-split.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/3-train-test-split.R', echo=TRUE)
View(master_data)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
library(kableExtra)                     # for printing tables
library(cowplot)                        # for side by side plots
library(lubridate)                      # for dealing with dates
library(maps)                           # for creating maps
library(tidyverse)
library(tidyquant)
library(scales)
# read in the cleaned data
master_data = read_csv(
"/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/master_data.csv"
)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
rm(list=ls())
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/0-download.R', echo=TRUE)
rm(list=ls())
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
library(janitor)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
rm(list=ls())
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/4-regression-modeling.R', echo=TRUE)
# read in the training data
train_data = read_csv("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/data/clean/train_data.csv")
View(train_data)
ridge_fit = cv.glmnet(leading_party ~ . - state - county - fips - total_votes - Democrat - Other - Republican - Green - Libertarian - pct_dem - pct_rep - pct_other - pct_green - pct_libertarian,
alpha = 0,
nfolds = 10,
family = "binomial",
type.measure = "class",
data = train_data)
plot(ridge_fit)
plot_glmnet(ridge_fit, default_train, features_to_plot = 4)
# load libraries
library(glmnetUtils)                    # to run ridge and lasso
source("code/functions/plot_glmnet.R")            # for lasso/ridge trace plots
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/4-regression-modeling.R', echo=TRUE)
plot_glmnet(ridge_fit, default_train, features_to_plot = 4)
source("/Users/sahill/OneDrive - PennO365/STAT 471/election-final-project/code/functions/plot_glmnet.R")            # for lasso/ridge trace plots
plot_glmnet(ridge_fit, default_train, features_to_plot = 4)
plot_glmnet(ridge_fit, train_data, features_to_plot = 4)
plot_glmnet(ridge_fit, train_data, features_to_plot = 6)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/4-regression-modeling.R', echo=TRUE)
master_data = read_csv('data/clean/train_data.csv')
library(kableExtra)                     # for printing tables
library(cowplot)                        # for side by side plots
library(lubridate)                      # for dealing with dates
library(maps)                           # for creating maps
library(flextable)                      # creating contingency tables
library(corrplot)                       # creating correlation matrices
library(tidyverse)
library(tidyquant)
master_data = read_csv('data/clean/train_data.csv')
setwd('C:/Users/Mahima Sangli/OneDrive/Documents/2021-2022 School Year/STAT 471/election-final-project')
master_data = read_csv('data/clean/train_data.csv')
x_cts = dtypes[dtypes=='numeric'] %>%
names()
dtypes = sapply(colnames(master_data), function(x) class(master_data[[x]]))
x_cts = dtypes[dtypes=='numeric'] %>%
names()
x_cts
x_cts[1:12]
health_box = master_data %>%
ggplot(aes(x=poor_fair_health, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "Proportion with Poor Health",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/health-box.png",
plot = health_box,
device = "png",
width = 9,
height = 9
)
#covid
covid_box = master_data %>%
ggplot(aes(x=pct_covid_deaths, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "Percent of Deaths due to COVID",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/covid-box.png",
plot = covid_box,
device = "png",
width = 9,
height = 9
)
mask_hist = master_data %>%
select(sometimes, always, never, leading_party) %>%
group_by(leading_party) %>%
summarise(mean_sometimes = mean(sometimes),
mean_always = mean(always),
mean_never = mean(never))
mask1 = mask_hist %>%
ggplot() +
geom_bar(aes(x=mean_sometimes,y=leading_party,fill=leading_party),stat='identity') +
labs(x = 'Mean Proportion of Response "Sometimes"',
y = 'Leading Party') +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
mask2 = mask_hist %>%
ggplot() +
geom_bar(aes(x=mean_always,y=leading_party,fill=leading_party),stat='identity') +
labs(x = 'Mean Proportion of Response "Always"',
y = 'Leading Party') +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
mask3 = mask_hist %>%
ggplot() +
geom_bar(aes(x=mean_never,y=leading_party,fill=leading_party),stat='identity') +
labs(x = 'Mean Proportion of Response "Never"',
y = 'Leading Party') +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
plot_row = plot_grid(mask1,mask2,mask3)
title = ggdraw() +
draw_label(
"How often do you wear a mask?",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
plot.margin = margin(0, 0, 0, 7))
mask_behavior = plot_grid(title, plot_row)
ggsave(
filename = "results/mask-bar.png",
plot = mask_behavior,
device = "png",
width = 20,
height = 9
)
#demographic/socioeconomic
#a) education
edu_box = master_data %>%
ggplot(aes(x=pct_bachelors_or_higher, y=leading_party, fill = leading_party)) +
geom_boxplot() +
labs(x = "% with Bach. Degree or Higher",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/edu-box.png",
plot = edu_box,
device = "png",
width = 9,
height = 9
)
#b) income/socieconomic status
income_box = master_data %>%
ggplot(aes(x=median_household_income, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "Median Household Income",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/income-box.png",
plot = income_box,
device = "png",
width = 9,
height = 9
)
unemp_box = master_data %>%
ggplot(aes(x=unemployment_rate, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "Unemployment Rate (%)",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/unemp-box.png",
plot = unemp_box,
device = "png",
width = 9,
height = 9
)
#c) race/ethnicity
race_box1 = master_data %>%
ggplot(aes(x=pct_nonhispanic_white, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "% Nonhispanic White Residents",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
race_box2 = master_data %>%
ggplot(aes(x=pct_nonhispanic_black, y=leading_party, fill=leading_party)) +
geom_boxplot()+
labs(x = "% Nonhispanic Black Residents",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
race_box3 = master_data %>%
ggplot(aes(x=pct_hispanic, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "% Hispanic Residents",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
race_box4 = master_data %>%
ggplot(aes(x=pct_asian, y=leading_party, fill=leading_party)) +
geom_boxplot() +
labs(x = "% Asian Residents",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
race_plots = plot_grid(race_box1,race_box2,race_box3,race_box4)
ggsave(
filename = "results/race-plots.png",
plot = race_plots,
device = "png",
width = 9,
height = 9
)
#d) age
age_box = master_data %>%
ggplot(aes(x=pct_above_65, y=leading_party, fill=leading_party)) +
geom_boxplot()+
labs(x = "% Residents Above 65",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/age-box.png",
plot = age_box,
device = "png",
width = 9,
height = 9
)
#e) gender
gender_box = master_data %>%
ggplot(aes(x=pct_females, y=leading_party, fill=leading_party)) +
geom_boxplot()+
labs(x = "% Female Residents",
y = "Leading Party") +
scale_fill_manual(breaks = c("Democrat", "Republican"),
values = c("blue", "red"))
ggsave(
filename = "results/gender-box.png",
plot = gender_box,
device = "png",
width = 9,
height = 9
)
