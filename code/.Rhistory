select(-year)
population = subset(population,!(endsWith(fips, '000')))
population = sapply(population, as.numeric)
# clean unemployment data
unemployment = unemployment_raw %>%
filter(str_detect(
Attribute,
"Median_Household_Income_2019|Unemployment_rate_2020"
))
unemployment = unemployment[-c(1, 2), ]
unemployment = unemployment %>% pivot_wider(names_from = Attribute,
values_from = Value) %>%
select(
fips = FIPS_Code,
unemployment_rate = Unemployment_rate_2020,
median_household_income = Median_Household_Income_2019
)
unemployment = subset(unemployment,!(fips %% 1000 == 0))
unemployment = sapply(unemployment, as.numeric)
# clean poverty data
poverty = poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value) %>%
select(fips = FIPStxt, poverty_rating = POVALL_2019)
poverty = subset(poverty,!(fips %% 1000 == 0))
# make each cleaned data set a dataframe
fips_clean = as.data.frame(fips_clean)
states = as.data.frame(states)
election = as.data.frame(election)
county_health = as.data.frame(county_health)
COVID = as.data.frame(COVID)
masks = as.data.frame(masks)
education = as.data.frame(education)
population = as.data.frame(population)
unemployment = as.data.frame(unemployment)
poverty = as.data.frame(poverty)
# clean each data set further by joining additional geographical information
fips_clean = inner_join(fips_clean, states, by = "state_code") %>% select(-state_code)
county_health = inner_join(county_health, fips_clean, by = "fips")
COVID = inner_join(COVID, fips_clean, by = "fips")
masks = inner_join(masks, fips_clean, by = "fips")
education = inner_join(education, fips_clean, by = "fips")
population = inner_join(population, fips_clean, by = "fips")
unemployment = inner_join(unemployment, fips_clean, by = "fips")
poverty = inner_join(poverty, fips_clean, by = "fips")
# create a master data set using inner join
master_data = inner_join(x = election,
y = (county_health %>% select(-county,-state)), by = "fips") %>%
inner_join((COVID %>% select(-county,-state)), by = "fips") %>%
inner_join((masks %>% select(-county,-state)), by = "fips") %>%
inner_join((education %>% select(-county,-state)), by = "fips") %>%
inner_join((population %>% select(-county,-state)), by = "fips") %>%
inner_join((unemployment %>% select(-county,-state)), by = "fips") %>%
inner_join((poverty %>% select(-county,-state)), by = "fips") %>%
mutate(pct_voters = total_votes / population)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
poverty = poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value)
poverty = poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value) %>%
select(fips = FIPStxt)
# clean poverty data
poverty = poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value)
poverty = poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value) %>%
rename(fips = FIPStxt) %>%
mutate(log_poverty_rating = log10(POVALL_2019))
poverty = subset(poverty,!(fips %% 1000 == 0))
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
poverty %>%
rename(
region = state,
subregion = county,
`Poverty Rating` = poverty_rating
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Poverty Rating`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
poverty %>%
rename(
region = state,
subregion = county,
`Poverty Rating` = log_poverty_rating
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Poverty Rating`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
pct_greater_than_HSdiploma = log10(pct_college_associates + pct_bachelors_or_higher)
) %>%
rename(`% of Population with an Associates Degree or More` = pct_greater_than_HSdiploma),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Population with an Associates Degree or More`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
pct_greater_than_HSdiploma = pct_college_associates + pct_bachelors_or_higher
) %>%
rename(`% of Population with an Associates Degree or More` = pct_greater_than_HSdiploma),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Population with an Associates Degree or More`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
View(COVID)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
pct_COVID_deaths_by_total = covid_deaths/total_deaths
) %>%
rename(`% of Total Deaths that are COVID Deaths` = pct_COVID_deaths_by_total),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_COVID_deaths) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_covid_deaths) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
View(election)
View(election)
View(unemployment)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county,
`Unemployment Rate` = unemployment_rate) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
education %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
skewness(master_data)
skewness(county_health$traffic_volume)
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/1-cleaning.R', echo=TRUE)
skewness(master$population)
skewness(master_data$population)
skewness(master_data$covid_deaths)
skewness(master_data$total_deaths)
View(poverty_raw)
View(poverty_raw)
skewness((poverty_raw %>% pivot_wider(names_from = Attribute,
values_from = Value))$POVALL_2019)
nums <- unlist(lapply(master_data, is.numeric))
nums
master_data %>% dplyr::select(where(is.numeric))
skewness(master_data %>% dplyr::select(where(is.numeric)))
skew_check = skewness(master_data %>% dplyr::select(where(is.numeric)))
View(skew_check)
map_data("county") %>%
as_tibble() %>%
left_join(
COVID %>%
rename(
region = state,
subregion = county,
`% of Total Deaths that are COVID Deaths` = pct_covid_deaths
) %>%
mutate(region = str_to_lower(region),
subregion = str_to_lower(subregion)),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `% of Total Deaths that are COVID Deaths`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "green", high = "red") +
theme_void()
map_data("county") %>%
as_tibble() %>%
left_join(
unemployment %>%
rename(region = state,
subregion = county) %>%
mutate(
region = str_to_lower(region),
subregion = str_to_lower(subregion),
log_unemployment_rate = log10(unemployment_rate)
) %>%
rename(`Log Unemployment Rate` = log_unemployment_rate),
by = c("region", "subregion")
) %>%
ggplot() +
geom_polygon(
data = map_data("state"),
aes(x = long, y = lat, group = group),
color = "black",
fill = NA,
size = 1,
alpha = .3
) +
geom_polygon(
aes(
x = long,
y = lat,
group = group,
fill = `Log Unemployment Rate`
),
color = "darkblue",
size = .1
) +
scale_fill_gradient(low = "red", high = "green") +
theme_void()
source('~/OneDrive - PennO365/STAT 471/election-final-project/code/2-exploration.R', echo=TRUE)
